ECOMMERCE PROJECT TODO LIST
==========================

## **Auth Controllers** 🔄
- ✅ registerUser - Register new customer
- ✅ loginUser - Login existing user
- ✅ logoutUser - Logout and clear JWT cookie
- ❌ [LATER] refreshToken - Refresh JWT token
- ❌ [LATER] forgotPassword - Send password reset email
- ❌ [LATER] resetPassword - Reset password with token

## **User Controllers** 🔄
- ✅ getCurrentUser - Get current authenticated user
- ✅ updateCurrentUserDetails - Update name, email
- ✅ updatePassword - Change password
- ✅ addNewAddress - Add new address
- ✅ getMyAddresses - Get user's addresses
- ✅ deleteMyAddress - Delete address by ID
- ✅ updateMyAddress - Update existing address
- ✅ getCustomers - Get customers
- ✅ getManagers - Get customers
- ✅ uploadAvatar - Upload/update profile picture
- ✅ deleteAccount - Delete user account
- ✅ getUserById - Get user details 
- ✅ updateUserRole - Change user role 
- ✅ updateUserStatus - Activate/Deactivate user account

## **Product Controllers** ✅
- ✅ getProducts - Get all products with filters/pagination
- ✅ getProductById - Get single product
- ✅ createProduct - Create new product (Admin/Manager)
- ✅ updateProduct - Update entire product (Admin/Manager)
- ✅ updateProductProperty - Update single property (Admin/Manager)
- ✅ deleteProduct - Delete product (Admin/Manager)
- ✅ getProductReviews - Get product reviews
- ✅ submitReview - Add product review
- ✅ editReview - Edit user's own review
- ✅ deleteReview - Delete review (Admin/Manager)

## **Category Controllers** ✅
- ✅ getAllCategories - Get all categories
- ✅ getCategoryById - Get single category
- ✅ createCategory - Create new category (Admin/Manager)
- ✅ updateCategory - Update category (Admin/Manager)
- ✅ deleteCategory - Delete category (Admin/Manager)
- ✅ getCategoryProducts - Get products in category

## **Cart Controllers** ✅
- ✅ getCart - Get user's cart
- ✅ addToCart - Add product to cart
- ✅ updateCartItemQuantity - Update quantity in cart
- ✅ removeFromCart - Remove item from cart
- ✅ clearCart - Empty entire cart

## **Order Controllers** ✅
- ✅ createOrder - Create new order from cart
- ✅ getMyOrders - Get current user's orders
- ✅ getMyOrderById - Get my single order details
- ✅ getOrderById - Get single order details
- ✅ updateOrderStatus - Update order status (Admin/Manager)
- ✅ cancelOrder - Cancel order (if allowed)
- ✅ getAllOrders - Get all orders (Admin/Manager)

## ** [LATER] Payment Controllers** ❌
- ❌ createPayment - Initialize payment
- ❌ getPaymentById - Get payment details
- ❌ getMyPayments - Get user's payment history
- ❌ getAllPayments - Get all payments (Admin/Manager)
- ❌ verifyPayment - Verify payment with gateway
- ❌ refundPayment - Process refund (Admin/Manager)

## **Media Controllers** ✅
TODO: Create middleware for optional media upload.
- ✅ getMedia - Get all media files (Admin/Manager)
- ✅ getMediaById - Get media file
- ✅ uploadMedia - Upload image/file
- ✅ updateMediaDetails - Update details of the media (Eg. name, alt, etc.).
- ✅ deleteMedia - Delete media file

## ** [LATER] Dashboard Controllers** ❌
- ❌ getDashboardStats - Get admin dashboard data


## **Additional Tasks:**
- ❌ Add comprehensive error handling
- ✅ Implement file upload functionality
- ❌ Add API documentation (Swagger)
- ❌ Write unit tests
- ❌ Add logging system
- ❌ Implement rate limiting
- ❌ Add API versioning
- ❌ Performance optimization
- ❌ Security enhancements
- ❌ Implement pagination


## Later

### **Code TODOs (From Comments):**
- ❌ Implement hybrid authentication for login, logout, and registration (auth.controller.ts)
- ❌ Implement cancellation policy for orders (order.controller.ts)
- ❌ Only user who got delivered an order containing the product can submit a review (product.controller.ts)
- ❌ Create middleware for optional media upload (media.routes.ts)
- ❌ Implement cleanup queue system for failed file deletions (cloudinary.middleware.ts)

### **Backend Enhancements:**
- ❌ Add comprehensive error handling
- ❌ Add API documentation (Swagger)
- ❌ Write unit tests
- ❌ Add logging system
- ❌ Implement rate limiting
- ❌ Add API versioning
- ❌ Performance optimization
- ❌ Security enhancements
- ❌ Implement pagination

### **Future Features:**
- ❌ Payment Controllers integration
- ❌ Dashboard Controllers and analytics
- ❌ Add default user avatar